( Adapted from Forth Dimensions Vol 4 Num 1 page 13 )
(          Fractional Arithmetic by Leo Brodie      )


needs math'

chain: fixed'

16384 constant +1

: */ ( n1 n2 n3 -- result )
    [ * ] dip / ;

: *. ( n n -- n )
    +1 */ ;

: /. ( n n -- n )
    +1 swap */ ;

: D->F ( d -- fraction )
    drop 10000 /. ;

: putSign ( num -- num )
    dup 0 < [ '- putc ] ifTrue ;

: putWhole ( num -- num )
    dup 10000 >= [ 10000 /mod ] [ 0 ] if putn ;

: putFrac ( num -- num )
    '. putc
    1000 /mod putn
    100  /mod putn
    10   /mod putn
    1    /mod putn ;

: pDec
    putSign
    ^math'abs
    putWhole
    putFrac
    drop ;

: .F ( fraction -- ) 10000 *. pDec cr ;

: __d
    ^strings'splitAtChar: . ^strings'chop toNumber [ toNumber ] dip ; parsing
;chain

