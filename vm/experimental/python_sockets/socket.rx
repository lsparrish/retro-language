{{
    : ?CR  
	over 1+ @ 110 = [ drop over 10 swap ! 1+ 0 ] [ -1 ] if ;
	    
    : ?NL  
	over 1+ @ 114 = [ drop over 13 swap ! 1+ 0 ] [ -1 ] if ;

    : ?ESCAPE 
	dup 92 = [ ?CR [ ?NL ] [ 0 ]  if ] [ -1 ]  if ;
	    
    : COPYNULL
	dup 1+ @ 0 = [ over 1+ 0 swap ! ] ifTrue ;
	    
    : COPYVAL
	[ swap push over ! pop ] ifTrue ;
	    
    : _NORMALIZE ( string -- string endread endwrite ) 
	2dup repeat dup @ 0; 
	?ESCAPE COPYVAL COPYNULL 
	1+ swap 1+ swap again ;
	    
	---reveal---    
	
    : NORMALIZE 
	_NORMALIZE 2drop ;
	    
    : PRINTCHARS ( string -- )
	swap [ dup @ putc 1+ ] times drop ;
}}

: connect ( addr port -- sock )         
    #1 #15 out #0 #0 out wait ;
: close   ( sock -- status )             
    #2 #15 out #0 #0 out wait ;
: read    ( sock count buffer -- count )   
    #3 #15 out #0 #0 out wait ;
: write   ( sock length buffer -- count ) 
    #4 #15 out #0 #0 out wait ;

: copyargs ( v1 v2 v3 -- v1 v2 v3 v1 v2 v3 )
    [ 2over ] dip dup [ 2rot ] dip ;
    
: readall ( sock count buffer -- ) 
    copyargs read ;

( Create read buffer )
create buffer 1024 allot 

( Create socket )
variable socket

( Connect assign socket )
"www.osnews.com" 80 connect socket ! 

( Request Page )
socket @ "GET / HTTP/1.1\r\nHost: www.osnews.com\r\n\r\n" 
    NORMALIZE withLength swap write

( Print results )
socket @ 1024 buffer
[ readall dup buffer PRINTCHARS 0 > ] while
2drop 2drop

( Close Socket )
socket @ close

